// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bubblesmp/environment/environment.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bubblesmp/environment/environment.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace ademovic {
namespace bubblesmp {
namespace environment {

namespace {

const ::google::protobuf::Descriptor* Segment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Segment_reflection_ = NULL;
const ::google::protobuf::Descriptor* Segment_Range_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Segment_Range_reflection_ = NULL;
const ::google::protobuf::Descriptor* Robot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Robot_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnvironmentConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnvironmentConfig_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EnvironmentConfig_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_bubblesmp_2fenvironment_2fenvironment_2eproto() {
  protobuf_AddDesc_bubblesmp_2fenvironment_2fenvironment_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bubblesmp/environment/environment.proto");
  GOOGLE_CHECK(file != NULL);
  Segment_descriptor_ = file->message_type(0);
  static const int Segment_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, theta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, d_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, alpha_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, parts_),
  };
  Segment_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Segment_descriptor_,
      Segment::default_instance_,
      Segment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Segment));
  Segment_Range_descriptor_ = Segment_descriptor_->nested_type(0);
  static const int Segment_Range_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_Range, min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_Range, max_),
  };
  Segment_Range_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Segment_Range_descriptor_,
      Segment_Range::default_instance_,
      Segment_Range_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_Range, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment_Range, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Segment_Range));
  Robot_descriptor_ = file->message_type(1);
  static const int Robot_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, segments_),
  };
  Robot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Robot_descriptor_,
      Robot::default_instance_,
      Robot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Robot));
  EnvironmentConfig_descriptor_ = file->message_type(2);
  static const int EnvironmentConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentConfig, robot_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentConfig, robot_filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentConfig, environment_filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentConfig, max_underestimate_),
  };
  EnvironmentConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EnvironmentConfig_descriptor_,
      EnvironmentConfig::default_instance_,
      EnvironmentConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnvironmentConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EnvironmentConfig));
  EnvironmentConfig_Type_descriptor_ = EnvironmentConfig_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bubblesmp_2fenvironment_2fenvironment_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Segment_descriptor_, &Segment::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Segment_Range_descriptor_, &Segment_Range::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Robot_descriptor_, &Robot::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EnvironmentConfig_descriptor_, &EnvironmentConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bubblesmp_2fenvironment_2fenvironment_2eproto() {
  delete Segment::default_instance_;
  delete Segment_reflection_;
  delete Segment_Range::default_instance_;
  delete Segment_Range_reflection_;
  delete Robot::default_instance_;
  delete Robot_reflection_;
  delete EnvironmentConfig::default_instance_;
  delete EnvironmentConfig_reflection_;
}

void protobuf_AddDesc_bubblesmp_2fenvironment_2fenvironment_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\'bubblesmp/environment/environment.prot"
    "o\022\"com.ademovic.bubblesmp.environment\"\275\001"
    "\n\007Segment\022\014\n\001a\030\001 \001(\001:\0010\022\020\n\005theta\030\002 \001(\001:\001"
    "0\022\014\n\001d\030\003 \001(\001:\0010\022\020\n\005alpha\030\004 \001(\001:\0010\022@\n\005ran"
    "ge\030\005 \001(\01321.com.ademovic.bubblesmp.enviro"
    "nment.Segment.Range\022\r\n\005parts\030\006 \003(\t\032!\n\005Ra"
    "nge\022\013\n\003min\030\001 \001(\001\022\013\n\003max\030\002 \001(\001\"F\n\005Robot\022="
    "\n\010segments\030\001 \003(\0132+.com.ademovic.bubblesm"
    "p.environment.Segment\"\210\002\n\021EnvironmentCon"
    "fig\022M\n\004type\030\001 \001(\0162:.com.ademovic.bubbles"
    "mp.environment.EnvironmentConfig.Type:\003F"
    "CL\022\?\n\014robot_config\030\002 \001(\0132).com.ademovic."
    "bubblesmp.environment.Robot\022\026\n\016robot_fil"
    "ename\030\003 \001(\t\022\034\n\024environment_filename\030\004 \001("
    "\t\022\034\n\021max_underestimate\030\005 \001(\001:\0010\"\017\n\004Type\022"
    "\007\n\003FCL\020\000", 608);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bubblesmp/environment/environment.proto", &protobuf_RegisterTypes);
  Segment::default_instance_ = new Segment();
  Segment_Range::default_instance_ = new Segment_Range();
  Robot::default_instance_ = new Robot();
  EnvironmentConfig::default_instance_ = new EnvironmentConfig();
  Segment::default_instance_->InitAsDefaultInstance();
  Segment_Range::default_instance_->InitAsDefaultInstance();
  Robot::default_instance_->InitAsDefaultInstance();
  EnvironmentConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bubblesmp_2fenvironment_2fenvironment_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bubblesmp_2fenvironment_2fenvironment_2eproto {
  StaticDescriptorInitializer_bubblesmp_2fenvironment_2fenvironment_2eproto() {
    protobuf_AddDesc_bubblesmp_2fenvironment_2fenvironment_2eproto();
  }
} static_descriptor_initializer_bubblesmp_2fenvironment_2fenvironment_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Segment_Range::kMinFieldNumber;
const int Segment_Range::kMaxFieldNumber;
#endif  // !_MSC_VER

Segment_Range::Segment_Range()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.ademovic.bubblesmp.environment.Segment.Range)
}

void Segment_Range::InitAsDefaultInstance() {
}

Segment_Range::Segment_Range(const Segment_Range& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.ademovic.bubblesmp.environment.Segment.Range)
}

void Segment_Range::SharedCtor() {
  _cached_size_ = 0;
  min_ = 0;
  max_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Segment_Range::~Segment_Range() {
  // @@protoc_insertion_point(destructor:com.ademovic.bubblesmp.environment.Segment.Range)
  SharedDtor();
}

void Segment_Range::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Segment_Range::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Segment_Range::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Segment_Range_descriptor_;
}

const Segment_Range& Segment_Range::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bubblesmp_2fenvironment_2fenvironment_2eproto();
  return *default_instance_;
}

Segment_Range* Segment_Range::default_instance_ = NULL;

Segment_Range* Segment_Range::New() const {
  return new Segment_Range;
}

void Segment_Range::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Segment_Range*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(min_, max_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Segment_Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.ademovic.bubblesmp.environment.Segment.Range)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double min = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_)));
          set_has_min();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_max;
        break;
      }

      // optional double max = 2;
      case 2: {
        if (tag == 17) {
         parse_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_)));
          set_has_max();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.ademovic.bubblesmp.environment.Segment.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.ademovic.bubblesmp.environment.Segment.Range)
  return false;
#undef DO_
}

void Segment_Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.ademovic.bubblesmp.environment.Segment.Range)
  // optional double min = 1;
  if (has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->min(), output);
  }

  // optional double max = 2;
  if (has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->max(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.ademovic.bubblesmp.environment.Segment.Range)
}

::google::protobuf::uint8* Segment_Range::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.ademovic.bubblesmp.environment.Segment.Range)
  // optional double min = 1;
  if (has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->min(), target);
  }

  // optional double max = 2;
  if (has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->max(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.ademovic.bubblesmp.environment.Segment.Range)
  return target;
}

int Segment_Range::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional double min = 1;
    if (has_min()) {
      total_size += 1 + 8;
    }

    // optional double max = 2;
    if (has_max()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Segment_Range::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Segment_Range* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Segment_Range*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Segment_Range::MergeFrom(const Segment_Range& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_min()) {
      set_min(from.min());
    }
    if (from.has_max()) {
      set_max(from.max());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Segment_Range::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Segment_Range::CopyFrom(const Segment_Range& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Segment_Range::IsInitialized() const {

  return true;
}

void Segment_Range::Swap(Segment_Range* other) {
  if (other != this) {
    std::swap(min_, other->min_);
    std::swap(max_, other->max_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Segment_Range::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Segment_Range_descriptor_;
  metadata.reflection = Segment_Range_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Segment::kAFieldNumber;
const int Segment::kThetaFieldNumber;
const int Segment::kDFieldNumber;
const int Segment::kAlphaFieldNumber;
const int Segment::kRangeFieldNumber;
const int Segment::kPartsFieldNumber;
#endif  // !_MSC_VER

Segment::Segment()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.ademovic.bubblesmp.environment.Segment)
}

void Segment::InitAsDefaultInstance() {
  range_ = const_cast< ::com::ademovic::bubblesmp::environment::Segment_Range*>(&::com::ademovic::bubblesmp::environment::Segment_Range::default_instance());
}

Segment::Segment(const Segment& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.ademovic.bubblesmp.environment.Segment)
}

void Segment::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  a_ = 0;
  theta_ = 0;
  d_ = 0;
  alpha_ = 0;
  range_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Segment::~Segment() {
  // @@protoc_insertion_point(destructor:com.ademovic.bubblesmp.environment.Segment)
  SharedDtor();
}

void Segment::SharedDtor() {
  if (this != default_instance_) {
    delete range_;
  }
}

void Segment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Segment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Segment_descriptor_;
}

const Segment& Segment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bubblesmp_2fenvironment_2fenvironment_2eproto();
  return *default_instance_;
}

Segment* Segment::default_instance_ = NULL;

Segment* Segment::New() const {
  return new Segment;
}

void Segment::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Segment*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(a_, alpha_);
    if (has_range()) {
      if (range_ != NULL) range_->::com::ademovic::bubblesmp::environment::Segment_Range::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  parts_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Segment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.ademovic.bubblesmp.environment.Segment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double a = 1 [default = 0];
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_theta;
        break;
      }

      // optional double theta = 2 [default = 0];
      case 2: {
        if (tag == 17) {
         parse_theta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &theta_)));
          set_has_theta();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_d;
        break;
      }

      // optional double d = 3 [default = 0];
      case 3: {
        if (tag == 25) {
         parse_d:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &d_)));
          set_has_d();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_alpha;
        break;
      }

      // optional double alpha = 4 [default = 0];
      case 4: {
        if (tag == 33) {
         parse_alpha:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alpha_)));
          set_has_alpha();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_range;
        break;
      }

      // optional .com.ademovic.bubblesmp.environment.Segment.Range range = 5;
      case 5: {
        if (tag == 42) {
         parse_range:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_parts;
        break;
      }

      // repeated string parts = 6;
      case 6: {
        if (tag == 50) {
         parse_parts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_parts()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parts(this->parts_size() - 1).data(),
            this->parts(this->parts_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parts");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_parts;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.ademovic.bubblesmp.environment.Segment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.ademovic.bubblesmp.environment.Segment)
  return false;
#undef DO_
}

void Segment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.ademovic.bubblesmp.environment.Segment)
  // optional double a = 1 [default = 0];
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->a(), output);
  }

  // optional double theta = 2 [default = 0];
  if (has_theta()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->theta(), output);
  }

  // optional double d = 3 [default = 0];
  if (has_d()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->d(), output);
  }

  // optional double alpha = 4 [default = 0];
  if (has_alpha()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->alpha(), output);
  }

  // optional .com.ademovic.bubblesmp.environment.Segment.Range range = 5;
  if (has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->range(), output);
  }

  // repeated string parts = 6;
  for (int i = 0; i < this->parts_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->parts(i).data(), this->parts(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "parts");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->parts(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.ademovic.bubblesmp.environment.Segment)
}

::google::protobuf::uint8* Segment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.ademovic.bubblesmp.environment.Segment)
  // optional double a = 1 [default = 0];
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->a(), target);
  }

  // optional double theta = 2 [default = 0];
  if (has_theta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->theta(), target);
  }

  // optional double d = 3 [default = 0];
  if (has_d()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->d(), target);
  }

  // optional double alpha = 4 [default = 0];
  if (has_alpha()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->alpha(), target);
  }

  // optional .com.ademovic.bubblesmp.environment.Segment.Range range = 5;
  if (has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->range(), target);
  }

  // repeated string parts = 6;
  for (int i = 0; i < this->parts_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parts(i).data(), this->parts(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parts");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->parts(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.ademovic.bubblesmp.environment.Segment)
  return target;
}

int Segment::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional double a = 1 [default = 0];
    if (has_a()) {
      total_size += 1 + 8;
    }

    // optional double theta = 2 [default = 0];
    if (has_theta()) {
      total_size += 1 + 8;
    }

    // optional double d = 3 [default = 0];
    if (has_d()) {
      total_size += 1 + 8;
    }

    // optional double alpha = 4 [default = 0];
    if (has_alpha()) {
      total_size += 1 + 8;
    }

    // optional .com.ademovic.bubblesmp.environment.Segment.Range range = 5;
    if (has_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->range());
    }

  }
  // repeated string parts = 6;
  total_size += 1 * this->parts_size();
  for (int i = 0; i < this->parts_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->parts(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Segment::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Segment* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Segment*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Segment::MergeFrom(const Segment& from) {
  GOOGLE_CHECK_NE(&from, this);
  parts_.MergeFrom(from.parts_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_theta()) {
      set_theta(from.theta());
    }
    if (from.has_d()) {
      set_d(from.d());
    }
    if (from.has_alpha()) {
      set_alpha(from.alpha());
    }
    if (from.has_range()) {
      mutable_range()->::com::ademovic::bubblesmp::environment::Segment_Range::MergeFrom(from.range());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Segment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Segment::CopyFrom(const Segment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Segment::IsInitialized() const {

  return true;
}

void Segment::Swap(Segment* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(theta_, other->theta_);
    std::swap(d_, other->d_);
    std::swap(alpha_, other->alpha_);
    std::swap(range_, other->range_);
    parts_.Swap(&other->parts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Segment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Segment_descriptor_;
  metadata.reflection = Segment_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Robot::kSegmentsFieldNumber;
#endif  // !_MSC_VER

Robot::Robot()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.ademovic.bubblesmp.environment.Robot)
}

void Robot::InitAsDefaultInstance() {
}

Robot::Robot(const Robot& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.ademovic.bubblesmp.environment.Robot)
}

void Robot::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Robot::~Robot() {
  // @@protoc_insertion_point(destructor:com.ademovic.bubblesmp.environment.Robot)
  SharedDtor();
}

void Robot::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Robot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Robot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Robot_descriptor_;
}

const Robot& Robot::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bubblesmp_2fenvironment_2fenvironment_2eproto();
  return *default_instance_;
}

Robot* Robot::default_instance_ = NULL;

Robot* Robot::New() const {
  return new Robot;
}

void Robot::Clear() {
  segments_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Robot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.ademovic.bubblesmp.environment.Robot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.ademovic.bubblesmp.environment.Segment segments = 1;
      case 1: {
        if (tag == 10) {
         parse_segments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_segments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_segments;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.ademovic.bubblesmp.environment.Robot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.ademovic.bubblesmp.environment.Robot)
  return false;
#undef DO_
}

void Robot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.ademovic.bubblesmp.environment.Robot)
  // repeated .com.ademovic.bubblesmp.environment.Segment segments = 1;
  for (int i = 0; i < this->segments_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->segments(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.ademovic.bubblesmp.environment.Robot)
}

::google::protobuf::uint8* Robot::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.ademovic.bubblesmp.environment.Robot)
  // repeated .com.ademovic.bubblesmp.environment.Segment segments = 1;
  for (int i = 0; i < this->segments_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->segments(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.ademovic.bubblesmp.environment.Robot)
  return target;
}

int Robot::ByteSize() const {
  int total_size = 0;

  // repeated .com.ademovic.bubblesmp.environment.Segment segments = 1;
  total_size += 1 * this->segments_size();
  for (int i = 0; i < this->segments_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->segments(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Robot::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Robot* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Robot*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Robot::MergeFrom(const Robot& from) {
  GOOGLE_CHECK_NE(&from, this);
  segments_.MergeFrom(from.segments_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Robot::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Robot::CopyFrom(const Robot& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Robot::IsInitialized() const {

  return true;
}

void Robot::Swap(Robot* other) {
  if (other != this) {
    segments_.Swap(&other->segments_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Robot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Robot_descriptor_;
  metadata.reflection = Robot_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* EnvironmentConfig_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnvironmentConfig_Type_descriptor_;
}
bool EnvironmentConfig_Type_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const EnvironmentConfig_Type EnvironmentConfig::FCL;
const EnvironmentConfig_Type EnvironmentConfig::Type_MIN;
const EnvironmentConfig_Type EnvironmentConfig::Type_MAX;
const int EnvironmentConfig::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int EnvironmentConfig::kTypeFieldNumber;
const int EnvironmentConfig::kRobotConfigFieldNumber;
const int EnvironmentConfig::kRobotFilenameFieldNumber;
const int EnvironmentConfig::kEnvironmentFilenameFieldNumber;
const int EnvironmentConfig::kMaxUnderestimateFieldNumber;
#endif  // !_MSC_VER

EnvironmentConfig::EnvironmentConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.ademovic.bubblesmp.environment.EnvironmentConfig)
}

void EnvironmentConfig::InitAsDefaultInstance() {
  robot_config_ = const_cast< ::com::ademovic::bubblesmp::environment::Robot*>(&::com::ademovic::bubblesmp::environment::Robot::default_instance());
}

EnvironmentConfig::EnvironmentConfig(const EnvironmentConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.ademovic.bubblesmp.environment.EnvironmentConfig)
}

void EnvironmentConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  robot_config_ = NULL;
  robot_filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  environment_filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_underestimate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EnvironmentConfig::~EnvironmentConfig() {
  // @@protoc_insertion_point(destructor:com.ademovic.bubblesmp.environment.EnvironmentConfig)
  SharedDtor();
}

void EnvironmentConfig::SharedDtor() {
  if (robot_filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete robot_filename_;
  }
  if (environment_filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete environment_filename_;
  }
  if (this != default_instance_) {
    delete robot_config_;
  }
}

void EnvironmentConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnvironmentConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnvironmentConfig_descriptor_;
}

const EnvironmentConfig& EnvironmentConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bubblesmp_2fenvironment_2fenvironment_2eproto();
  return *default_instance_;
}

EnvironmentConfig* EnvironmentConfig::default_instance_ = NULL;

EnvironmentConfig* EnvironmentConfig::New() const {
  return new EnvironmentConfig;
}

void EnvironmentConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EnvironmentConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(max_underestimate_, type_);
    if (has_robot_config()) {
      if (robot_config_ != NULL) robot_config_->::com::ademovic::bubblesmp::environment::Robot::Clear();
    }
    if (has_robot_filename()) {
      if (robot_filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        robot_filename_->clear();
      }
    }
    if (has_environment_filename()) {
      if (environment_filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        environment_filename_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EnvironmentConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.ademovic.bubblesmp.environment.EnvironmentConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.ademovic.bubblesmp.environment.EnvironmentConfig.Type type = 1 [default = FCL];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::ademovic::bubblesmp::environment::EnvironmentConfig_Type_IsValid(value)) {
            set_type(static_cast< ::com::ademovic::bubblesmp::environment::EnvironmentConfig_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_robot_config;
        break;
      }

      // optional .com.ademovic.bubblesmp.environment.Robot robot_config = 2;
      case 2: {
        if (tag == 18) {
         parse_robot_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_robot_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_robot_filename;
        break;
      }

      // optional string robot_filename = 3;
      case 3: {
        if (tag == 26) {
         parse_robot_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->robot_filename().data(), this->robot_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "robot_filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_environment_filename;
        break;
      }

      // optional string environment_filename = 4;
      case 4: {
        if (tag == 34) {
         parse_environment_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_environment_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->environment_filename().data(), this->environment_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "environment_filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_max_underestimate;
        break;
      }

      // optional double max_underestimate = 5 [default = 0];
      case 5: {
        if (tag == 41) {
         parse_max_underestimate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_underestimate_)));
          set_has_max_underestimate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.ademovic.bubblesmp.environment.EnvironmentConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.ademovic.bubblesmp.environment.EnvironmentConfig)
  return false;
#undef DO_
}

void EnvironmentConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.ademovic.bubblesmp.environment.EnvironmentConfig)
  // optional .com.ademovic.bubblesmp.environment.EnvironmentConfig.Type type = 1 [default = FCL];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .com.ademovic.bubblesmp.environment.Robot robot_config = 2;
  if (has_robot_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->robot_config(), output);
  }

  // optional string robot_filename = 3;
  if (has_robot_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_filename().data(), this->robot_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robot_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->robot_filename(), output);
  }

  // optional string environment_filename = 4;
  if (has_environment_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->environment_filename().data(), this->environment_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "environment_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->environment_filename(), output);
  }

  // optional double max_underestimate = 5 [default = 0];
  if (has_max_underestimate()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->max_underestimate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.ademovic.bubblesmp.environment.EnvironmentConfig)
}

::google::protobuf::uint8* EnvironmentConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.ademovic.bubblesmp.environment.EnvironmentConfig)
  // optional .com.ademovic.bubblesmp.environment.EnvironmentConfig.Type type = 1 [default = FCL];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .com.ademovic.bubblesmp.environment.Robot robot_config = 2;
  if (has_robot_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->robot_config(), target);
  }

  // optional string robot_filename = 3;
  if (has_robot_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_filename().data(), this->robot_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robot_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->robot_filename(), target);
  }

  // optional string environment_filename = 4;
  if (has_environment_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->environment_filename().data(), this->environment_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "environment_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->environment_filename(), target);
  }

  // optional double max_underestimate = 5 [default = 0];
  if (has_max_underestimate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->max_underestimate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.ademovic.bubblesmp.environment.EnvironmentConfig)
  return target;
}

int EnvironmentConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.ademovic.bubblesmp.environment.EnvironmentConfig.Type type = 1 [default = FCL];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .com.ademovic.bubblesmp.environment.Robot robot_config = 2;
    if (has_robot_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->robot_config());
    }

    // optional string robot_filename = 3;
    if (has_robot_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->robot_filename());
    }

    // optional string environment_filename = 4;
    if (has_environment_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->environment_filename());
    }

    // optional double max_underestimate = 5 [default = 0];
    if (has_max_underestimate()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnvironmentConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EnvironmentConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EnvironmentConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EnvironmentConfig::MergeFrom(const EnvironmentConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_robot_config()) {
      mutable_robot_config()->::com::ademovic::bubblesmp::environment::Robot::MergeFrom(from.robot_config());
    }
    if (from.has_robot_filename()) {
      set_robot_filename(from.robot_filename());
    }
    if (from.has_environment_filename()) {
      set_environment_filename(from.environment_filename());
    }
    if (from.has_max_underestimate()) {
      set_max_underestimate(from.max_underestimate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EnvironmentConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnvironmentConfig::CopyFrom(const EnvironmentConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnvironmentConfig::IsInitialized() const {

  return true;
}

void EnvironmentConfig::Swap(EnvironmentConfig* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(robot_config_, other->robot_config_);
    std::swap(robot_filename_, other->robot_filename_);
    std::swap(environment_filename_, other->environment_filename_);
    std::swap(max_underestimate_, other->max_underestimate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EnvironmentConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnvironmentConfig_descriptor_;
  metadata.reflection = EnvironmentConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace environment
}  // namespace bubblesmp
}  // namespace ademovic
}  // namespace com

// @@protoc_insertion_point(global_scope)
