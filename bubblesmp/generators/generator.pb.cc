// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bubblesmp/generators/generator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bubblesmp/generators/generator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace ademovic {
namespace bubblesmp {
namespace generators {

namespace {

const ::google::protobuf::Descriptor* GeneratorSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GeneratorSettings_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GeneratorSettings_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_bubblesmp_2fgenerators_2fgenerator_2eproto() {
  protobuf_AddDesc_bubblesmp_2fgenerators_2fgenerator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bubblesmp/generators/generator.proto");
  GOOGLE_CHECK(file != NULL);
  GeneratorSettings_descriptor_ = file->message_type(0);
  static const int GeneratorSettings_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneratorSettings, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneratorSettings, seed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneratorSettings, keys_),
  };
  GeneratorSettings_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GeneratorSettings_descriptor_,
      GeneratorSettings::default_instance_,
      GeneratorSettings_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneratorSettings, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneratorSettings, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GeneratorSettings));
  GeneratorSettings_Type_descriptor_ = GeneratorSettings_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bubblesmp_2fgenerators_2fgenerator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GeneratorSettings_descriptor_, &GeneratorSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bubblesmp_2fgenerators_2fgenerator_2eproto() {
  delete GeneratorSettings::default_instance_;
  delete GeneratorSettings_reflection_;
}

void protobuf_AddDesc_bubblesmp_2fgenerators_2fgenerator_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$bubblesmp/generators/generator.proto\022!"
    "com.ademovic.bubblesmp.generators\"\240\001\n\021Ge"
    "neratorSettings\022O\n\004type\030\001 \001(\01629.com.adem"
    "ovic.bubblesmp.generators.GeneratorSetti"
    "ngs.Type:\006SIMPLE\022\014\n\004seed\030\002 \001(\r\022\014\n\004keys\030\003"
    " \003(\r\"\036\n\004Type\022\n\n\006SIMPLE\020\000\022\n\n\006HALTON\020\001", 236);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bubblesmp/generators/generator.proto", &protobuf_RegisterTypes);
  GeneratorSettings::default_instance_ = new GeneratorSettings();
  GeneratorSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bubblesmp_2fgenerators_2fgenerator_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bubblesmp_2fgenerators_2fgenerator_2eproto {
  StaticDescriptorInitializer_bubblesmp_2fgenerators_2fgenerator_2eproto() {
    protobuf_AddDesc_bubblesmp_2fgenerators_2fgenerator_2eproto();
  }
} static_descriptor_initializer_bubblesmp_2fgenerators_2fgenerator_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* GeneratorSettings_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GeneratorSettings_Type_descriptor_;
}
bool GeneratorSettings_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GeneratorSettings_Type GeneratorSettings::SIMPLE;
const GeneratorSettings_Type GeneratorSettings::HALTON;
const GeneratorSettings_Type GeneratorSettings::Type_MIN;
const GeneratorSettings_Type GeneratorSettings::Type_MAX;
const int GeneratorSettings::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GeneratorSettings::kTypeFieldNumber;
const int GeneratorSettings::kSeedFieldNumber;
const int GeneratorSettings::kKeysFieldNumber;
#endif  // !_MSC_VER

GeneratorSettings::GeneratorSettings()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.ademovic.bubblesmp.generators.GeneratorSettings)
}

void GeneratorSettings::InitAsDefaultInstance() {
}

GeneratorSettings::GeneratorSettings(const GeneratorSettings& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.ademovic.bubblesmp.generators.GeneratorSettings)
}

void GeneratorSettings::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  seed_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GeneratorSettings::~GeneratorSettings() {
  // @@protoc_insertion_point(destructor:com.ademovic.bubblesmp.generators.GeneratorSettings)
  SharedDtor();
}

void GeneratorSettings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GeneratorSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GeneratorSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GeneratorSettings_descriptor_;
}

const GeneratorSettings& GeneratorSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bubblesmp_2fgenerators_2fgenerator_2eproto();
  return *default_instance_;
}

GeneratorSettings* GeneratorSettings::default_instance_ = NULL;

GeneratorSettings* GeneratorSettings::New() const {
  return new GeneratorSettings;
}

void GeneratorSettings::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GeneratorSettings*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(type_, seed_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  keys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GeneratorSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.ademovic.bubblesmp.generators.GeneratorSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.ademovic.bubblesmp.generators.GeneratorSettings.Type type = 1 [default = SIMPLE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::ademovic::bubblesmp::generators::GeneratorSettings_Type_IsValid(value)) {
            set_type(static_cast< ::com::ademovic::bubblesmp::generators::GeneratorSettings_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seed;
        break;
      }

      // optional uint32 seed = 2;
      case 2: {
        if (tag == 16) {
         parse_seed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seed_)));
          set_has_seed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_keys;
        break;
      }

      // repeated uint32 keys = 3;
      case 3: {
        if (tag == 24) {
         parse_keys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24, input, this->mutable_keys())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_keys())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_keys;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.ademovic.bubblesmp.generators.GeneratorSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.ademovic.bubblesmp.generators.GeneratorSettings)
  return false;
#undef DO_
}

void GeneratorSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.ademovic.bubblesmp.generators.GeneratorSettings)
  // optional .com.ademovic.bubblesmp.generators.GeneratorSettings.Type type = 1 [default = SIMPLE];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 seed = 2;
  if (has_seed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seed(), output);
  }

  // repeated uint32 keys = 3;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->keys(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.ademovic.bubblesmp.generators.GeneratorSettings)
}

::google::protobuf::uint8* GeneratorSettings::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.ademovic.bubblesmp.generators.GeneratorSettings)
  // optional .com.ademovic.bubblesmp.generators.GeneratorSettings.Type type = 1 [default = SIMPLE];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 seed = 2;
  if (has_seed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seed(), target);
  }

  // repeated uint32 keys = 3;
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(3, this->keys(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.ademovic.bubblesmp.generators.GeneratorSettings)
  return target;
}

int GeneratorSettings::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .com.ademovic.bubblesmp.generators.GeneratorSettings.Type type = 1 [default = SIMPLE];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint32 seed = 2;
    if (has_seed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seed());
    }

  }
  // repeated uint32 keys = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->keys_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->keys(i));
    }
    total_size += 1 * this->keys_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GeneratorSettings::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GeneratorSettings* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GeneratorSettings*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GeneratorSettings::MergeFrom(const GeneratorSettings& from) {
  GOOGLE_CHECK_NE(&from, this);
  keys_.MergeFrom(from.keys_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_seed()) {
      set_seed(from.seed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GeneratorSettings::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneratorSettings::CopyFrom(const GeneratorSettings& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneratorSettings::IsInitialized() const {

  return true;
}

void GeneratorSettings::Swap(GeneratorSettings* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(seed_, other->seed_);
    keys_.Swap(&other->keys_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GeneratorSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GeneratorSettings_descriptor_;
  metadata.reflection = GeneratorSettings_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace generators
}  // namespace bubblesmp
}  // namespace ademovic
}  // namespace com

// @@protoc_insertion_point(global_scope)
