// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bubblesmp/generators/generator.proto

#ifndef PROTOBUF_bubblesmp_2fgenerators_2fgenerator_2eproto__INCLUDED
#define PROTOBUF_bubblesmp_2fgenerators_2fgenerator_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace ademovic {
namespace bubblesmp {
namespace generators {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bubblesmp_2fgenerators_2fgenerator_2eproto();
void protobuf_AssignDesc_bubblesmp_2fgenerators_2fgenerator_2eproto();
void protobuf_ShutdownFile_bubblesmp_2fgenerators_2fgenerator_2eproto();

class GeneratorSettings;

enum GeneratorSettings_Type {
  GeneratorSettings_Type_SIMPLE = 0,
  GeneratorSettings_Type_HALTON = 1
};
bool GeneratorSettings_Type_IsValid(int value);
const GeneratorSettings_Type GeneratorSettings_Type_Type_MIN = GeneratorSettings_Type_SIMPLE;
const GeneratorSettings_Type GeneratorSettings_Type_Type_MAX = GeneratorSettings_Type_HALTON;
const int GeneratorSettings_Type_Type_ARRAYSIZE = GeneratorSettings_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* GeneratorSettings_Type_descriptor();
inline const ::std::string& GeneratorSettings_Type_Name(GeneratorSettings_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    GeneratorSettings_Type_descriptor(), value);
}
inline bool GeneratorSettings_Type_Parse(
    const ::std::string& name, GeneratorSettings_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GeneratorSettings_Type>(
    GeneratorSettings_Type_descriptor(), name, value);
}
// ===================================================================

class GeneratorSettings : public ::google::protobuf::Message {
 public:
  GeneratorSettings();
  virtual ~GeneratorSettings();

  GeneratorSettings(const GeneratorSettings& from);

  inline GeneratorSettings& operator=(const GeneratorSettings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneratorSettings& default_instance();

  void Swap(GeneratorSettings* other);

  // implements Message ----------------------------------------------

  GeneratorSettings* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GeneratorSettings& from);
  void MergeFrom(const GeneratorSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GeneratorSettings_Type Type;
  static const Type SIMPLE = GeneratorSettings_Type_SIMPLE;
  static const Type HALTON = GeneratorSettings_Type_HALTON;
  static inline bool Type_IsValid(int value) {
    return GeneratorSettings_Type_IsValid(value);
  }
  static const Type Type_MIN =
    GeneratorSettings_Type_Type_MIN;
  static const Type Type_MAX =
    GeneratorSettings_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    GeneratorSettings_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return GeneratorSettings_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return GeneratorSettings_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return GeneratorSettings_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .com.ademovic.bubblesmp.generators.GeneratorSettings.Type type = 1 [default = SIMPLE];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::com::ademovic::bubblesmp::generators::GeneratorSettings_Type type() const;
  inline void set_type(::com::ademovic::bubblesmp::generators::GeneratorSettings_Type value);

  // optional uint32 seed = 2;
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 2;
  inline ::google::protobuf::uint32 seed() const;
  inline void set_seed(::google::protobuf::uint32 value);

  // repeated uint32 keys = 3;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 3;
  inline ::google::protobuf::uint32 keys(int index) const;
  inline void set_keys(int index, ::google::protobuf::uint32 value);
  inline void add_keys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      keys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_keys();

  // @@protoc_insertion_point(class_scope:com.ademovic.bubblesmp.generators.GeneratorSettings)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_seed();
  inline void clear_has_seed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 seed_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keys_;
  friend void  protobuf_AddDesc_bubblesmp_2fgenerators_2fgenerator_2eproto();
  friend void protobuf_AssignDesc_bubblesmp_2fgenerators_2fgenerator_2eproto();
  friend void protobuf_ShutdownFile_bubblesmp_2fgenerators_2fgenerator_2eproto();

  void InitAsDefaultInstance();
  static GeneratorSettings* default_instance_;
};
// ===================================================================


// ===================================================================

// GeneratorSettings

// optional .com.ademovic.bubblesmp.generators.GeneratorSettings.Type type = 1 [default = SIMPLE];
inline bool GeneratorSettings::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GeneratorSettings::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GeneratorSettings::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GeneratorSettings::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::com::ademovic::bubblesmp::generators::GeneratorSettings_Type GeneratorSettings::type() const {
  // @@protoc_insertion_point(field_get:com.ademovic.bubblesmp.generators.GeneratorSettings.type)
  return static_cast< ::com::ademovic::bubblesmp::generators::GeneratorSettings_Type >(type_);
}
inline void GeneratorSettings::set_type(::com::ademovic::bubblesmp::generators::GeneratorSettings_Type value) {
  assert(::com::ademovic::bubblesmp::generators::GeneratorSettings_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.ademovic.bubblesmp.generators.GeneratorSettings.type)
}

// optional uint32 seed = 2;
inline bool GeneratorSettings::has_seed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GeneratorSettings::set_has_seed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GeneratorSettings::clear_has_seed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GeneratorSettings::clear_seed() {
  seed_ = 0u;
  clear_has_seed();
}
inline ::google::protobuf::uint32 GeneratorSettings::seed() const {
  // @@protoc_insertion_point(field_get:com.ademovic.bubblesmp.generators.GeneratorSettings.seed)
  return seed_;
}
inline void GeneratorSettings::set_seed(::google::protobuf::uint32 value) {
  set_has_seed();
  seed_ = value;
  // @@protoc_insertion_point(field_set:com.ademovic.bubblesmp.generators.GeneratorSettings.seed)
}

// repeated uint32 keys = 3;
inline int GeneratorSettings::keys_size() const {
  return keys_.size();
}
inline void GeneratorSettings::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::uint32 GeneratorSettings::keys(int index) const {
  // @@protoc_insertion_point(field_get:com.ademovic.bubblesmp.generators.GeneratorSettings.keys)
  return keys_.Get(index);
}
inline void GeneratorSettings::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.ademovic.bubblesmp.generators.GeneratorSettings.keys)
}
inline void GeneratorSettings::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:com.ademovic.bubblesmp.generators.GeneratorSettings.keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GeneratorSettings::keys() const {
  // @@protoc_insertion_point(field_list:com.ademovic.bubblesmp.generators.GeneratorSettings.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GeneratorSettings::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:com.ademovic.bubblesmp.generators.GeneratorSettings.keys)
  return &keys_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace generators
}  // namespace bubblesmp
}  // namespace ademovic
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::ademovic::bubblesmp::generators::GeneratorSettings_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::ademovic::bubblesmp::generators::GeneratorSettings_Type>() {
  return ::com::ademovic::bubblesmp::generators::GeneratorSettings_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bubblesmp_2fgenerators_2fgenerator_2eproto__INCLUDED
